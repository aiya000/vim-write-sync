*write-sync.vim*		The fastest way to open scratch buffers

Author: aiya000
License: MIT license

==============================================================================
CONTENTS					*write-sync-contents*

INTRODUCTION			|write-sync-introduction|
USAGE				|write-sync-usage|
INTERFACE			|write-sync-interface|
  VARIABLES			|write-sync-variables|
CHANGELOG			|write-sync-changelog|


==============================================================================
INTRODUCTION						*write-sync-introduction*

When you did `:w` (`:write`), write an another file with the same file content.
>
	let g:write_sync_lists = [
	  \ [
	    \ '~/.dotfiles/AutoHotkey.ahk',
	    \ '/mnt/c/Users/you/Desktop/AutoHotkey.ahk',
	  \ ],
	  \ ['~/tmp/x', '~/tmp/y', '~/tmp/z'],
	\ ]

	:edit ~/.dotfiles/AutoHotkey.ahk " Edit the file
	:write " Write the file
	" --> The same contents are written to '/mnt/c/Users/you/Desktop/AutoHotkey.ahk'

	" The same applies to ~/tmp/{x,y,z}
<
Newer Version:
https://github.com/aiya000/vim-write-sync


==============================================================================
USAGE						*write-sync-usage*

Read ../README.md and |write-sync-introduction|.

==============================================================================
INTERFACE				*write-sync-interface*

------------------------------------------------------------------------------
VARIABLES						*write-sync-variables*

*g:write_sync_lists*
	Type: `Array<Array<string>>`
	Default: `'[]'`
	Example: Please see|write-sync-introduction|

	The following rules apply to each element.

	Here is an example for `[['~/tmp/x', '~/tmp/y', '~/tmp/z']`
		of |write-sync-introduction|.

	When a content are written to `~/tmp/x`,
	the same content to `~/tmp/y` and `~/tmp/z`.

	When a content is written to `~/tmp/y`,
	the same content will be in `~/tmp/x` and `~/tmp/z`.

	When a content written to `~/tmp/z`,
	the same content are written to `~/tmp/x` and `~/tmp/y`.


*g:write_sync_notify_result*
	Type: `boolean | 'popup' | 'echo' | 'echomsg'`
	Default: `v:false`

	Notify `:write` result by `popup_atcursor()`, :`echo`, or `:echomsg`
	when file synchronization (simultaneous writes) is finished
	and failed to write a target file.
>
	" Notify result by `popup_atcursor()`
	let g:write_sync_notify_result = v:true
	" This is same as above (`v:true`)
	let g:write_sync_notify_result = 'popup'

	" Simular to `v:true` but using `:echo` instead of `popup_atcursor()`
	let g:write_sync_notify_result = 'echo'
	" Or we can use ':echomsg'
	let g:write_sync_notify_result = 'echomsg'
<


==============================================================================
CHANGELOG					*write-sync-changelog*

Also see https://github.com/aiya000/vim-write-sync/commits/main

Breaking changes:
- 2025-04-26:
	Rename g:write_sync_echo_success_on_write to g:write_sync_notify_result
	and improve results notifications

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:fdm=marker
